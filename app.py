import os
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

# Carregar vari치veis do ambiente
BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = os.getenv("ADMIN_ID")

# Verifica칞칚o b치sica de seguran칞a
if BOT_TOKEN is None:
    raise ValueError("Erro: A vari치vel BOT_TOKEN n칚o est치 definida.")
if ADMIN_ID is None:
    raise ValueError("Erro: A vari치vel ADMIN_ID n칚o est치 definida.")

# Comando /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("Ol치! Eu sou o RevoltadinhoBot. Pronto para revolu칞칫es. 游눤")

# Comando secreto s칩 para o admin
async def segredo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if str(update.effective_user.id) == ADMIN_ID:
        await update.message.reply_text("丘멆잺 Acesso concedido ao painel secreto.")
    else:
        await update.message.reply_text("游뛂 Acesso negado.")

# Inicializar a aplica칞칚o do bot
app = ApplicationBuilder().token(BOT_TOKEN).build()

# Adicionar comandos
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("segredo", segredo))

# Iniciar polling
app.run_polling()

  
